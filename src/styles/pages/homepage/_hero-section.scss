/* 1. Hero Section Styles */
/*------------------------*/
.hero {
  &-section {
    --section-height: calc(100vh - var(--space-above-hero));

    @media #{$min_992} {
      position: relative;
      height: var(--section-height);

      &[data-pan-effect]:hover {
        .hero__imgLayer {
          transform: scale(1.05);
        }
      }
    }

    @media #{$max_991} {
      min-height: var(--section-height);
      display: grid;
      place-content: center;
      padding: {
        top: 5rem;
        bottom: 5rem;
      }
    }
  }

  &__imgWrapper {
    @media #{$max_991} {
      position: relative;
      height: 80vw;
      width: 80vw;
      max-height: 25rem;
      max-width: 25rem;
      margin: auto;
    }
  }

  &__imgLayer {
    position: absolute;
    width: 100%;

    @media #{$min_992} {
      top: 0;
      left: 0;
      transition: transform 1s ease;
    }

    @media #{$max_991} {
      @include appDir() {
        #{dirs(left, right)}: 50%;
      }
    }

    &:first-of-type {
      height: 100%;
      mask-image: url("../assets/images/splash.png");
      mask-repeat: no-repeat;
      mask-position: center;
      mask-size: contain;

      &::before {
        content: "";
        position: absolute;
      }

      @media #{$min_992} {
        &::before {
          z-index: 1;
          top: 0;
          left: 0;
          height: 100%;
          width: 100%;
          background: linear-gradient(
            to right,
            hsl(var(--main-color-one)) 0%,
            hsl(var(--main-color-two)) 100%
          );
        }
      }

      @media #{$max_991} {
        top: 50%;

        @include appDir() {
          transform: dirs(translate(-50%, -50%), translate(50%, -50%));
        }

        &::before {
          bottom: 0;
          height: 80%;
          width: 80%;
          background-color: hsl(var(--main-color-one));
          border-radius: 50%;

          @include appDir() {
            #{dirs(left, right)}: 50%;
            transform: dirs(translateX(-50%), translateX(50%));
          }
        }
      }
    }

    &:last-of-type {
      height: 50%;
      overflow: hidden;

      @media #{$max_991} {
        top: 0;

        @include appDir() {
          transform: dirs(translateX(-50%), translateX(50%));
        }

        .hero__imgLayer__img {
          height: 200%;
          width: 200%;

          @include appDir() {
            transform: dirs(translateX(-25%), translateX(25%));
          }
        }
      }
    }

    &__img {
      display: block;
      filter: drop-shadow(0.125rem 0.25rem 0.375rem black);

      @media #{$min_992} {
        position: relative;
        z-index: 2;
        height: var(--section-height);
        max-width: 100%;
        margin: auto;
        user-select: none;
      }

      @media #{$max_991} {
        height: 100%;
        width: 100%;
        object-fit: contain;
      }
    }
  }

  &__text {
    text-align: center;

    @media #{$min_992} {
      position: absolute;
      z-index: 3;
      top: 45%;
      width: 90%;
      text-shadow: 0rem 0rem 1.25rem hsl(var(--dark-color));

      @include appDir() {
        #{dirs(left, right)}: 50%;
        transform: dirs(translateX(-50%), translateX(50%));
      }
    }

    @media #{$max_991} {
      width: 90vw;
    }

    &__title {
      margin-bottom: 2rem;

      @include appDir() {
        text-transform: dirs(capitalize, null);
      }

      @media #{$min_992} {
        color: hsl(var(--light-color)) !important;
        font-size: 3rem;
      }

      @media #{$max_991} {
        color: hsl(var(--bg-color-reverse));
        font-size: 2rem;
      }
    }

    &__btn {
      @media #{$min_992} {
        color: hsl(var(--light-color));
        border: 0.0625rem solid hsl(var(--light-color));

        &::after {
          background-color: hsl(var(--light-color));
        }

        &:hover {
          color: hsl(var(--dark-color));
        }
      }

      @media #{$max_991} {
        color: hsl(var(--bg-color-reverse));
        border: 0.0625rem solid hsl(var(--bg-color-reverse));

        &::after {
          background-color: hsl(var(--bg-color-reverse));
        }

        &:hover {
          color: hsl(var(--bg-color-one));
        }
      }
    }
  }

  &__social,
  &__scrollDown {
    @include flexbox(flex, "", center, "", "", "");
    position: absolute;
    bottom: 1.25rem;
    font-size: 1.125rem;
    text-transform: uppercase;

    @media #{$max_991} {
      display: none;
    }
  }

  &__social::before,
  &__scrollDown::after {
    content: "";
    display: inline-block;
    height: 0.125rem;
    width: 2rem;
    background-color: hsl(var(--t-color-two));
    transition: all 0.3s ease-in-out;
  }

  &__social a:hover,
  &__scrollDown:hover {
    color: hsl(var(--t-color-one));

    &::after {
      background-color: hsl(var(--t-color-one));
    }
  }

  &__social {
    @include appDir() {
      #{dirs(left, right)}: 2rem;
      transform: dirs(rotate(-90deg), rotate(90deg));
      transform-origin: dirs(left top, right top);
    }

    &::before {
      @include appDir() {
        margin-#{dirs(right, left)}: 1.25rem;
      }
    }

    &__list {
      display: flex;

      @include appDir() {
        transform: dirs(rotateY(180deg), rotateY(-180deg));
      }
    }

    &__item {
      @include appDir() {
        transform: dirs(
          rotateX(0deg) rotateY(180deg) rotateZ(90deg),
          rotateX(0deg) rotateY(-180deg) rotateZ(-90deg)
        );
      }

      &:not(:last-of-type) {
        @include appDir() {
          margin-#{dirs(right, left)}: 1.25rem;
        }
      }

      a {
        &:focus {
          @include focusStyle();
        }
      }
    }
  }

  &__scrollDown {
    @include appDir() {
      #{dirs(right, left)}: 2rem;
      transform: dirs(rotate(90deg), rotate(-90deg));
      transform-origin: dirs(right top, left top);
    }

    &::after {
      @include appDir() {
        margin-#{dirs(left, right)}: 1.25rem;
      }
    }

    a {
      text-transform: inherit;

      &:focus {
        @include focusStyle();
      }
    }
  }
}
